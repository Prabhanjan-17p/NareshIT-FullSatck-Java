1.What is the output of the following code
private class A
{
    public static void main(String[] args) {
        System.out.println("A");
    }
}
A.    A
B.    Compile time error
C.    Compile success but no output
D.    none of the above
Answer: B


2.What is the output of the following code
public class A
{
    void method1(){
        System.out.println("A");    
    }
}
public class B extends A {
    public static void main(String[] args) {
        method1();
    }
}
A.    Compile time error
B.    A
C.    method1()
D.    none of the above
Answer: A

3.Choose the correct option for the following program
class NIT
{
    protected int a, b;
}
public class OopsMCQ extends NIT {
    public static void main(String[] args) {
        System.out.println(a+" "+b);
    }
}
A.    1 2
B.    2 3
C.    0 0
D.    Compile time error
Answer : D


4.What is the output of the following code
class NIT
{
    void nit()
    {
        System.out.print("Welcome");
    }
}

class NIT1 extends NIT
{
    void nit()
    {
        System.out.print(" NareshIT");
    }
}
public class OopsMCQ
{
    static void print(NIT n)
    {
        n.nit();
    }
   
    public static void main(String[] args) {
        NIT nit1 = new NIT();
        NIT1 nit2 = new NIT1();
        NIT nit3 = new NIT1();
       
        print(nit1);
        print(nit2);
        print(nit3);
       
    }
}
A.    Welcome NareshIT Welcome
B.    NareshIT NareshIT
C.    Welcome NareshIT NareshIT
D.    Welcome
Answer: C

5.What is the output of the following code
class NIT
{
    void nit()
    {
        System.out.print("Welcome");
    }
}

class NIT1 extends NIT
{
    void nit()
    {
        System.out.print(" NareshIT");
    }
}
public class OopsMCQ
{
    static void print(NIT1 n)
    {
        n.nit();
    }
   
    public static void main(String[] args) {
        NIT nit1 = new NIT();
        NIT1 nit2 = new NIT1();
        NIT nit3 = new NIT1();
        print(nit1);
        print(nit2);
        print(nit3);
       
    }
}
A.    Welcome NareshIT Welcome
B.    NareshIT NareshIT
C.    Welcome NareshIT NareshIT
D.    Compile time error
Answer: D


6.What is the output of the following code
public class OopsMCQ
{
    private int a = 5;
    public static void main(String[] args) {
        OopsMCQ nit = new OopsMCQ();
        System.out.println(nit.a);
    }
}
A.    Runtime Error
B.    Compile time error
C.    5
D.    none of the above

Answer :C

7.Which error throws in the given below code?
class NIT
{
    protected int a, b;
    public NIT(int a1, int b1)
    {
        a = a1;
        b = b1;
    }
}

public class OopsMCQ
{
    public static void main(String[] args) {
        NIT nit = new NIT();
        System.out.println(nit.a+" "+nit.b);
    }
}
A.    The constructor is undefined
B.    nullpointerException
C.    0 0
D.    It does not return any value
Answer : A


8.What is the output of the following code
class NIT
{
    protected int a, b;
    public NIT(int a1, int b1)
    {
        a = a1;
        b = b1;
    }
    public NIT() {
       
    }
}
public class OopsMCQ
{
    public static void main(String[] args) {
        NIT nit = new NIT();
        System.out.println(nit.a+" "+nit.b);
    }
}
A.    The constructor is undefined
B.    nullpointerException
C.    0 0
D.    It does not return any value
Answer: C


9.Which error throws in the given below code
class NIT
{
    protected void nit()
    {
       
    }
}
class NIT1 extends NIT
{
    void nit()
    {
       
    }
}

public class OopsMCQ
{
    public static void main(String[] args) {
        NIT1 n = new NIT1();
        n.nit();
    }
}
A.    change derived class method to private
B.    change derived class method to protected
C.    Object cannot be initialized
D.    Run time Error
Answer: B

10.What is the output of the following code
class NIT
{
    public NIT()
    {
        System.out.print("NIT ");
    }
}

class NIT1 extends NIT
{
    public NIT1() {
        System.out.print("NIT1 ");
    }
}

class NIT2 extends NIT1
{
    public NIT2() {
        System.out.print("NIT2");
    }
}

public class OopsMCQ
{
    public static void main(String[] args) {
        NIT2 nit = new NIT2();
    }
}
A.    NIT
B.    NIT NIT1 NIT2
C.    NIT2
D.    NIT1 NIT2
Answer: B


11.What is the output of the following code
public class OopsMCQ
{
    void swap_names(String name1,String name2) {
        String temp="";
        temp=name1;
        name1=name2;
        name2=temp;
    }
    public static void main(String[] args) {
        String name1="Roger";
        String name2="Robert";
        System.out.println("Before swapping: name1="+name1+" name2="+name2);
        OopsMCQ t11 = new OopsMCQ();
        t11.swap_names(name1,name2);
        System.out.println("After swapping: name1="+name1+" name2="+name2);
    }
}
A.    Before swapping: name1=Roger name2=Robert<br>
    After swapping: name1=None name2=None
B.    Before swapping: name1=Roger name2=Robert<br>
    After swapping: name1= Robert name2=Robert
C.    Before swapping: name1=Roger name2=Robert<br>
    After swapping: name1=Roger name2=Robert
D.    Before swapping: name1=Roger name2=Robert<br>
    After swapping: name1= Robert  name2= Roger
Answer is C


12.    What is the output of the following code?
class NIT
{
    protected static void nit()
    {
        System.out.println("NIT");
    }
}

class NIT1 extends NIT
{
    protected static void nit()
    {
       
    }
}

public class Abstract extends NIT1 {
   
    public static void main(String[] args) {
        nit();
    }
}
A.    Compiler Error
B.    No output
C.    NIT
D.    None of the above
Answer: B

13.What is the output of the following code
class NIT
{
    protected void nit()
    {
        System.out.println("NIT");
    }
}

class NIT1 extends NIT
{
    protected void nit()
    {
       
    }
}

public class Abstract extends NIT1 {
   
    public static void main(String[] args) {
        nit();
    }
}
A.    Compiler Error
B.    No output
C.    NIT
D.    None of the above
Answer: A

14.What is the output of the following code
public class Poly {
   
    public static void nit(int a)
    {
        System.out.println(a +"Int");
    }
   
    public static void nit(String b)
    {
        System.out.println(b+" String");
    }
   
    public static void nit(Object c)
    {
        System.out.println(c+" Object");
    }
   
    public static void main(String[] args) {
        nit(null);
    }
}
A.    null String
B.    c Object
C.    b String
D.    null Object

Answer : A

15.    What is the output of the following code
public class Poly {
   
    public static void nit(Integer a)
    {
        System.out.println(a);
    }
   
    public static void nit(String b)
    {
        System.out.println(b);
    }
   
    public static void nit(Object c)
    {
        System.out.println(c);
    }
   
    public static void main(String[] args) {
        nit(null);
    }
}
A.    a
B.    c
C.    b
D.    null
E.    Compile time error
Answer : E


16.What is the output?
class A
{
    public int m1()
    {
        return 20;
    }
}
class B extends A
{
    public int  m1()
    {
        return 30;
    }
    public int m2()
    {
        return 40;
    }
}
class C extends B{
    public int m2()
    {
        return 20;
    }
}
public static void main(String[] args) {
        A obj1=new A();
        B obj2=new B();
        C obj3=new C();
        System.out.println(obj1.m1() + obj3.m1() + obj3.m2());
    }
A.    70
B.    90
C.    Error: Method m1 should be overridden in class C.
D.    80
Answer is A


17.What is the output of the following code snippet?
class Parent
{
    int num;
    public Parent(int num) {
        this.num=num;
    }
    int get_num()
    {
        return this.num;
    }
}
class Child extends Parent
{
    int val;
    public Child(int num,int val) {
        super(num);
        this.val=val;
    }
    int get_val()
    {
        return this.val;
    }
}
public static void main(String[] args) {
        Child son = new Child(100,200);
        System.out.print(son.get_num()+" ");
        System.out.println(son.get_val());
    }
A.    200 100
B.    Error: arguments cannot be passed through super() to the parent class constructor
C.    100 200
D.    None 200
Answer : C


18.What is the output of the following code snippet?
public class Test {  
     
    public void myMethod()  
    {  
    System.out.println("Method");  
    }  
     
    {  
    System.out.println(" Instance Block");  
    }  
         
    public void Test()  
    {  
    System.out.println("Constructor ");  
    }  

    static {  
        System.out.println("static block");  
    }  
   
    public static void main(String[] args)
    {  
    Test t1 = new Test();  
    t1.Test();
    t1.myMethod();  
  }  
}
a)Instance block, method, static block, and constructor
b)Method, constructor, instance block, and static block
c)Static block, method, instance block, and constructor
d)Static block, instance block, constructor, and method

Answer: (d)




-----------------------------------------------------------------------------
Create a Bank Application project by using Method Overriding Concept to display
different kinds of account details and calculate interest rate on each different types
of account like saving account, Current account and Fixed deposit account.
Validate all the inputs properly and generate error message, if any input is not appropriate.

Create a BLC class called BankAccount
Fields :
accountHolderName String protected
accountNumber String protected
   balance double protected
   IFSC_CODE public static final String (Initialize the IFSC CODE at the time of declaration,
   will be common for all the Objects)
   
   Use a parameterized constructor to initialize all the fields, In this constructor provide
   error message, if inputs are not in valid format like (see test cases for more details)
a)Account holder name cannot be empty.
b)Account number cannot be empty.
c)Balance cannot be negative.

Methods :

1) Method Name        : calculateInterest()
Argument        : No Argument
Return Type        : void
Access modifier    : public
In this method write a generic message regarding Bank interest Calculation.

2) Method Name        : displayAccountDetails()
Argument        : No Argument
Return Type        : void
Access modifier    : public
In this method display customer records [See the Test cases for more details in the below
of this question]

Create another BLC class SavingsAccount which is sub class of BankAccount

Field :
protected double interestRate = 4.0;

Take a parameterized constructor to initialize super class properties.

Method :

1) Method Name        : calculateInterest()
Argument        : No Argument
Return Type        : void
Access modifier    : public
In this method write a logic to calculate interest rate on Saving Account.

Create another BLC class CurrentAccount which is sub class of BankAccount

Field :
protected double overdraftLimit = 5000.0;

Take a parameterized constructor to initialize super class properties.

Method :

1) Method Name        : calculateInterest()
Argument        : No Argument
Return Type        : void
Access modifier    : public
In this method write a statement that Current accounts do not earn interest.

2) Method Name        : checkOverdraftLimit()
Argument        : No Argument
Return Type        : void
Access modifier    : public
In this method print overdraftLimit amount.

Create another BLC class FixedDepositAccount which is sub class of BankAccount

Field :
protected double interestRate = 4.0;

Take a parameterized constructor to initialize super class properties.

Method :

1) Method Name        : calculateInterest()
Argument        : No Argument
Return Type        : void
Access modifier    : public
In this method write a logic to calculate interest rate on Saving Account.

Field :
protected double interestRate = 6.5;
    depositTerm int protected;
   
    Take a parameterized constructor to initialize super class and current class properties.
    Validate the input deposit term with error message, depositTerm can't be negative.

Method :

1) Method Name        : calculateInterest()
Argument        : No Argument
Return Type        : void
Access modifier    : public
In this method write the logic to calculate the interest amount on FixedDeposit account.

Create an ELC class BankApplication with main method to test this application. Write
Switch case with Scanner class to Test as shown in the below Test Cases.

Test Cases for Output :
------------------------
Test Case 1 :
-------------
Please select the Account Type :
        1) Saving Account
        2) Current Account
        3) Fixed Deposit Account
   Please enter the type of account you want to open : [1/2/3]
   1
   Enter account Holder Name :JohnDeo
   Enter account Number :975645786545
   Enter the Amount :4000000

-----------------------

Account Holder: JohnDeo
Account Number: 975645786545
Balance RS: 4000000.0
IFSC CODE: SBIHYD151285
Savings Account Interest RS: 160000.0
   
   Test Case 2 :
-------------
Please select the Account Type :
        1) Saving Account
        2) Current Account
        3) Fixed Deposit Account
   Please enter the type of account you want to open : [1/2/3]
   2
   Enter account Holder Name :Scott
   Enter account Number :675456789765
   Enter the Amount :12000
--------------------
   Account Holder: Scott
   Account Number: 675456789765
   Balance RS :12000.0
   IFSC CODE :SBIHYD151285
   Current accounts do not earn interest.
   Overdraft limit RS :5000.0

Test Case 3 :
-------------
   Please select the Account Type :
        1) Saving Account
        2) Current Account
        3) Fixed Deposit Account
   Please enter the type of account you want to open : [1/2/3]
   3
   Enter account Holder Name :Martin
   Enter account Number :456787654345
   Enter the Amount :230000
   Enter the deposit term [For How many years you want to deposit] :5
---------------------------
   Account Holder: Martin
   Account Number: 456787654345
   Balance RS :230000.0
   IFSC CODE :SBIHYD151285
   Fixed Deposit Interest for 5 years RS :74750.0

   Test Cases for Input Validation :
---------------------------------
Test Cases 1:
-------------
Please select the Account Type :
        1) Saving Account
        2) Current Account
        3) Fixed Deposit Account
   Please enter the type of account you want to open : [1/2/3]
   1
   Enter account Holder Name :
   Enter account Number :4567876543
   Enter the Amount :128907
   Account holder name cannot be empty.

Test Cases 2:
-------------
   Please select the Account Type :
        1) Saving Account
        2) Current Account
        3) Fixed Deposit Account
   Please enter the type of account you want to open : [1/2/3]
   1
   Enter account Holder Name :Ravi
   Enter account Number :
   Enter the Amount :50000
   Account number cannot be empty.

Test Cases 3:
-------------
Please select the Account Type :
        1) Saving Account
        2) Current Account
        3) Fixed Deposit Account
   Please enter the type of account you want to open : [1/2/3]
   1
   Enter account Holder Name :Ravi
   Enter account Number :567876543456
   Enter the Amount :-9000
   Balance cannot be negative.
   
   Test Cases 4:
-------------
Please select the Account Type :
        1) Saving Account
        2) Current Account
        3) Fixed Deposit Account
   Please enter the type of account you want to open : [1/2/3]
   3
   Enter account Holder Name :Ravi
   Enter account Number :567865434567
   Enter the Amount :90876
   Enter the deposit term [For How many years you want to deposit] :-2
   Deposit term must be positive.
Sample Input
1
JohnDeo
975645786545
4000000
Sample Output
Account Holder: JohnDeo
Account Number: 975645786545
Balance RS: 4000000.0
IFSC CODE: SBIHYD151285
Savings Account Interest RS: 160000.0