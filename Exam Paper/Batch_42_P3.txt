
``` Question-1 ```
1-SumOfFirstAndLast
Write a C program to find the sum of the first and last digits of any three-digit number.
Sample Input
Input: 123
Sample Output
4
Explanation
4 (First digit is 1, last digit is 3; 1 + 3 = 4)


``` Question-2 ```
2-ReverseNumber

[Title: Reverse of Three digit number -Operators]
--------------------------------------------------
Write a C program to reverse a given three-digit number without using loops or ternary operators. The program should:

The input number will always be a valid three-digit integer (between 100 and 999).

Example Input :-
-----------------
Enter a three-digit number: 456
Example Output:

Reversed number: 654

Additional Test Cases:
-----------------------
Test Case-1 :-
---------------
Input: 321
Output: 123

Test Case-2 :-
--------------
Input: 987
Output: 789
Sample Input
321
Sample Output
123

``` Question-3 ```
3-TheTimeOfTheDay
[Title: Time of Day Classifier-Using else-if ladder]
----------------------------------------------------

Write a C Program to Identify the Time of Day :-
-------------------------------------------------
Develop a C program that accepts an hour (in 24-hour format) as input and classifies the time of day as "Morning," "Afternoon," "Evening," or "Night." Implement this using a series of if statements. The program should also validate the input and display an error message if the entered hour is outside the valid range (0-23).

Sample Input :-
---------------
Enter the hour (24-hour format): 13

Sample Output :-
----------------
It's Afternoon.

Sample Input
13
Sample Output
It's Afternoon.

``` Question-4 ```
4-TriangleIsValidORNot
[Title: Triangle Validity Check Using Side Lengths Using else-if ladder]
------------------------------------------------------------------------

Write a C program to input the lengths of all sides of a triangle and check whether the triangle is valid.

Validity Check :-
------------------
	-> The sum of side1 and side2 must be greater than side3.
	-> The sum of side1 and side3 must be greater than side2.
	-> The sum of side2 and side3 must be greater than side1.

If all three conditions are true, the program should print "The triangle is valid." If any of the conditions are false, the program should print "The triangle is not valid."

Sample Input :-
---------------
Enter the lengths of the three sides of the triangle:
-> Side 1: 3
-> Side 2: 4
-> Side 3: 5

Sample Output :-
-----------------
The triangle is valid.

Sample Input :-
---------------
Enter the lengths of the three sides of the triangle:
-> Side 1: 1
-> Side 2: 2
-> Side 3: 3

Sample Output :-
----------------
The triangle is not valid.
Sample Input
3
4
5
Sample Output
The triangle is valid.