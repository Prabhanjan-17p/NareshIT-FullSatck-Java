
Program04. Spring Boot Core Task: Temperature Converter
=======================================================

‚úÖ Objective
Build a Spring Boot Core-based console application that:
Accepts temperature in Celsius as input from the user.
Converts it to Fahrenheit.
Prints the result in the console.

üõ† Task Requirements

1Ô∏è. Main Application Class
Use @SpringBootApplication.
Launch the app using SpringApplication.run().

2Ô∏è. TemperatureService Class
Annotate it with @Component.
Add a method:
public double convertToFahrenheit(double celsius)
‚Üí returns the temperature in Fahrenheit using the formula: (celsius * 9/5) + 32.

3Ô∏è. Input Handling
Use Scanner to prompt:
Enter temperature in Celsius:

4Ô∏è. Output
Print the result:
Temperature in Fahrenheit: 98.6

-------------------------------------------------------

Program05. Spring Boot Core Task: Simple Interest Calculator
===========================================================

‚úÖ Objective
Build a Spring Boot Core-based console application that:
Accepts principal, rate, and time as input.
Calculates simple interest.
Prints the result.

üõ† Task Requirements

1Ô∏è. Main Application Class
Use @SpringBootApplication.
Launch the app using SpringApplication.run().

2Ô∏è. InterestService Class
Annotate it with @Component.
Add a method:
public double calculateSimpleInterest(double principal, double rate, double time)
‚Üí returns the simple interest using the formula: (P √ó R √ó T) / 100

3Ô∏è. Input Handling
Use Scanner to prompt:
Enter principal amount:
Enter rate of interest:
Enter time period in years:

4Ô∏è. Output
Print the result:
Simple Interest: 1500.0

-------------------------------------------------------

Program06. Spring Boot Core Task: Age Verifier
=============================================

‚úÖ Objective
Build a Spring Boot Core-based console application that:
Accepts age as input.
Determines if the person is a minor or an adult.
Prints the result.

üõ† Task Requirements

1Ô∏è. Main Application Class
Use @SpringBootApplication.
Launch the app using SpringApplication.run().

2Ô∏è. AgeService Class
Annotate it with @Component.
Add a method:
public String verifyAge(int age)
‚Üí returns "Minor" if age < 18, otherwise "Adult".

3Ô∏è. Input Handling
Use Scanner to prompt:
Enter your age:

4Ô∏è. Output
Print the result:
You are an Adult.

-------------------------------------------------------

Program07. Spring Boot Core Task: Grade Evaluator
=================================================

‚úÖ Objective
Build a Spring Boot Core-based console application that:
Accepts marks as input.
Evaluates and prints the grade (A, B, C, Fail).

üõ† Task Requirements

1Ô∏è. Main Application Class
Use @SpringBootApplication.
Launch the app using SpringApplication.run().

2Ô∏è. GradeService Class
Annotate it with @Component.
Add a method:
public String evaluateGrade(int marks)
‚Üí returns "A" for >=90, "B" for >=75, "C" for >=50, "Fail" otherwise.

3Ô∏è. Input Handling
Use Scanner to prompt:
Enter marks obtained:

4Ô∏è. Output
Print the result:
Your grade is: B

-------------------------------------------------------

Program08. Spring Boot Core Task: Leap Year Checker
===================================================

‚úÖ Objective
Build a Spring Boot Core-based console application that:
Accepts a year as input.
Checks if it is a leap year or not.
Prints the result.

üõ† Task Requirements

1Ô∏è. Main Application Class
Use @SpringBootApplication.
Launch the app using SpringApplication.run().

2Ô∏è. LeapYearService Class
Annotate it with @Component.
Add a method:
public String checkLeapYear(int year)
‚Üí returns "Leap Year" if divisible by 4 (but not 100 unless also 400), else "Not a Leap Year".

3Ô∏è. Input Handling
Use Scanner to prompt:
Enter year:

4Ô∏è. Output
Print the result:
2024 is a Leap Year.
