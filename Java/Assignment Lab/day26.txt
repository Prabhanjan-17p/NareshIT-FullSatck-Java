Que-1)
________________
class ConstructorsTest
{
    public static void main(String[] args)
    {
        U u = new U(); // 1
        U u1 = new U(1); //2
        V v = new V(); //3
        V v1 = new V(1); // 4
        T t = new T(); //5
        T t1 = new T(1);
    }
}
class U {
    V v = new V(); //1

    U() 
    { 
     System.out.print("U"); // 1.2-U
      }

    U(int i) {
     System.out.print("u"); //2.2-u
     }
}

class V {
    V() {
     System.out.print("V"); // 1.1-V , 2.1-V, 3.1-V , 5.1-V,6.1-V
      }

    V(int i) {
    System.out.print("v");  //4.1-v
     }
}

class T extends V {

    T() {
     System.out.print("T"); //5.2-T
     }

    T(int i) {
     System.out.print("t"); //6.2-t
     }
}

ANS-(VUVuVvVTVt)
________________________________________________________________________________________________
Que-2)
____________________
public class OutPut
{
    public static void main(String[] args)
    {
        new Alpha();
        new Base();
    }
}
class Alpha extends Base
{
    Alpha()
    {
        System.out.print("Base");//1.2-Base
    }
}
class Base
{  
    Base()
    {
        System.out.println("Base"); //1.1-Base,2.1-Base
    }
}

ANS - Base
      BaseBase
____________________________________________________________________________________________________
Que-3)
___________________
public class OutPut
{
    public static void main(String [] args)
    {
        Count t = new Count();
        t.count();
    }
}

class Count extends Count2
{
    Count()
    {

    }
}
class Count2
{
    void count()
    {
        System.out.print("Output = ");

        for (int x = 0; x < 7; x++,x++ )
        {
            System.out.print(" " + x);
        }
    }
}
ANS - Output =  0 2 4 6
____________________________________________________________________________________________
Que-4)
_______________

What will be the output of the following program?

public class OutPut
{
    public static void main(String [] args)
    {
        Count2 count = new Count2();
        count.count();
    }
}

class Count extends Count2
{
    Count()
    {

    }
}
class Count2
{
    void count()
    {
        int i = 5;
        System.out.print("Output = ");

        for (int x = 0; x <= (i % 7); x += 1) // x= x+1 ==> 5%7 => (5)
        {
            System.out.print(" " + x);
        }
    }
}

ANS -  Output = 0 1 2 3 4 5
___________________________________________________________________________________
Que-5)
____________________
What will be the output of the following program?

Public class OutPut
{
    public static void main(String [] args)
    {
        Count2 count = new Count2();
        count.count();
    }
}
//Derived Class
class Count extends Count2
{
    Count()
    {

    }
}
//Supper class
class Count2
{
    void count()
    {
        int i = 5;
        System.out.print("Output = ");

        for (int x = 0; x <= (i % 7); x += 1)
        {
            System.out.print(" " + x);
            i++;
        }
    }
}

ANS - Output = 0 1
_______________________________________________________________________________________
Que-6)
___________________
What will be the output of the following program?

public class OutPut
{
    public static void main(String s[])
    {
        int i = 2;
        B b = new B(); // Calling class B and set i = 0 because i is available in B because of extends
        b.execute();
    }
}

class A
{
    int i = 0;
    A(){}
}

class B extends A
{
    void execute()
    {
        for(; i < 6; i++) // i=0 
        
            switch(i)
            {
                case 0:
                System.out.println("i is zero."); // 1 (i=0)
                break;
        
                case 1:
                System.out.println("i is one."); // 2 (i=1)
                break;
        
                case 2:
                System.out.println("i is two."); // 3 (i=2)
                continue;
        
                case 3:
                System.out.println("i is three."); // 4 (i=3)
                break;
        
                default:
                System.out.println("i is greater than three."); // 5 (i=4) , 6 (i=5)
            }
    }
}

ANS - 
i is zero.
i is one.
i is two.
i is three.
i is greater than three.
i is greater than three.

_________________________________________________________________________________
Que-7)
_______________________
What will be the output of the following program?

public class OutPut
{
    public static void main(String s[])
    {
        int i = 2;
        B b = new B(); // calling the class B 
        b.execute();
    }
}

class A
{
    A()
    {
        int i = 1;  // i is decalre in constructor and destory in this same constructor
    }
}

class B extends A
{
    void execute()
    {
        System.out.println("i = " + i); // error is here 
    }
}

ANS - Compile Time Error 
_____________________________________________________________________________
Que-8)
_________________

What will be the output of the following program?

public class Constructors {
    public static void main(String[] args) {
        new A(3); // 1- 6
        new B(5, 6); // 2- 10,24
        new B(6, 7).C(1, 2, 3); // 3- 
        new C(3, 3, 4).B(4, 5);
        new C(1, 1, 1);
    }
}
class A {
    A(int i) {  
        print(i * 2);  // 3*2 = 6   // 2.1- 5*2=10
    }
    void print(int i) { 
        System.out.print(i + " "); //1.1 = 6  // 2.1 =10, 24
    }
}
class B extends A { 
    B(int j, int k) {
        super(j);
        print(k * 4); // 6*4 = 24 
    }
    void C(int j, int k, int l) {
      print(j + k + l - 3);   
    }
}
class C extends B {
    C(int j, int k, int l) {
        super(j, k);
        print(l - 3);
    }
    void B(int i, int k) {  
      print(i * 6);   
    }
}

ANS - 6 10 24 12 28 3 6 12 1 24 2 4 -2
________________________________________________________
Que-9)
________________
What will be the output of the following program?

public class FourWheeler
{
    public static void main(String[] args)
    {
        new Car(0);
    }
}

class Vehicle
{
    int i;
    int j;

    Vehicle(int i)
    {
        this.i = i;
        j = i;
    }

    Vehicle(int i, int j)
    {
        this.i = i;
        this.j = j;
    }
}

class Bus extends Vehicle
{
    double j;

    Bus(double j) // Error at this point because of (Bus do not call Supper class constructor means supper() keyword)
    {
        this.j = j;
    }
}

class Car extends Vehicle
{
    Car(int i)
    {
        super(i);
        System.out.print("Executed Successfully");
    }
}

ANS - Compile Time Error 
_____________________________________________________________
Que-10)
______________
What will be the output of the following program?

class BaseClass {
    BaseClass() {
        System.out.print("*");
    }
    BaseClass(String str) {
        this();
        System.out.print("@" + str);
    }
}
public class ChildClass extends BaseClass {
    ChildClass() {
        System.out.print("#");
    }
    ChildClass(String name) {
        this();
        System.out.print("$" + name);
    }
    public static void main(String args[]) {
        new ChildClass("hello");
    }
}

ANS - *#$hello
______________________________________________________________
Que-11)
________________
What will be the output of the following program?

class White {
    White() {
        System.out.print("white is ");//1.1 - white is , 2.1 - white is
    }
}
class Purple extends White {
    Purple(String color) {
        System.out.print(color); //1.2 - awesome, 2.2- nice 
    }
}
public class Black extends Purple {
    Black() {
        super("beautiful" + ",");
    }
    public static void main(String[] a) {
        new Purple("awesome" + ","); //awesome,
        new Purple("nice");
    }
}

ANS - white is awesome,white is nice
_______________________________________________________________
Que-12)
________________
What will be the output of the following program?

public class IAm {
    public static void main(String arg[]) {
        School ref = null;
        ref = new Office();
        ref.display();
    }
}
class School {
    void display() { // 5
        System.out.println("10th class");  // P-1
    }
}
class College extends School {
    void display() { //3
        new School().display(); // 4
        System.out.println("B.Tech"); // P-2
    }
}
class Office extends School { 
    void display() {  // 1
        new College().display(); // 2
        System.out.println("S/W company"); // P-3
    }
}

ANS - 
10th class
B.Tech
S/W company
__________________________________________________________________
Que-13)
______________
What will be the output of the following program?

public class IAm1 {
    public static void main(String arg[]) {
        float input = 24.8888888888888889f;
        School1 ref = null;
        if (input < 10) { // (24 < 10) False
            ref = new School1();
        } else if (input > 30) {  // (24 > 30) False
            ref = new College1();
        } else if (input == 24.88889f) { // (24.8888888888888889f == 24.88889f) True
            ref = new Office1();
        }
        ref.display(); // In above condition work due to calling Office1 class method
    }
}
class School1 {
    void display() {
        System.out.println("I am studying 10th class.");
    }
}
class College1 extends School1 {
    void display() {
        System.out.println("I am studying B.Tech.");
    }
}

class Office1 extends School1 {
    void display() {
        System.out.println("I am working in S/W company.");
    }
}

ANS - I am working in S/W company.
____________________________________________________________________
Que-14)
________________
What will be the output of the following program?
public class Fruit {
    private double fprice;
    private String fname;

    Fruit(double fPrice, String fName) {
        fprice = fPrice;
        fname = fName;
    }

    //Copy Constructor (One object value initialized to another object used in constructor and passing object as reference parameter)
    Fruit(Fruit fruit) {
        System.out.println("\nAfter invoking the Copy Constructor:\n");
        fprice = fruit.fprice;
        fname = fruit.fname;
    }

    double showPrice() {
        return fprice;
    }

    String showName() {
        return fname;
    }

    public static void main(String args[]) {
        Fruit f1 = new Fruit(399, "Ruby Roman Grapes"); // call Fruit Constructor and set the value
        System.out.println("Name of the first fruit: " + f1.showName());
        System.out.println("Price of the first fruit: " + f1.showPrice());

        Fruit f2 = new Fruit(f1); // Passing Fruit object as Argument 
        System.out.println("Name of the second fruit: " + f2.showName());
        System.out.println("Price of the second fruit: " + f2.showPrice());
    }
}

ANS - 
Name of the first fruit: Ruby Roman Grapes
Price of the first fruit: 399.0

After invoking the Copy Constructor:

Name of the second fruit: Ruby Roman Grapes
Price of the second fruit: 399.0
______________________________________________________________________ 
Que-15)
________________
What is the output of the below Java program?
public class TestingConstructor {
    void TestingConstructor() {
        System.out.println("Amsterdam");
    }
  
    TestingConstructor() {
        System.out.println("Antarctica");
    }
      
    public static void main(String[] args) {
        TestingConstructor tc = new TestingConstructor();
    }
}

ANS - Antarctica
______________________________________________________________________
Que-16)
________________
public class Constructor3
{
    int birds=10;
    Constructor3() {
        this(20); // calling Parameterized Constructor
    }
    Constructor3(int birds) {
        System.out.println("Birds=" + birds);
    }

  public static void main(String[] args) {
      Constructor3 con = new Constructor3();
  }
}

ANS - Birds=20
_____________________________________________________________________
Que-17)
________________
public class Constructor7 {
    Constructor7(int a) {
    System.out.println("Book=" + a);
    }
    Constructor7(float a) {
      System.out.println("Pen="+ a );
    }
    public static void main(String[] args) {
        Constructor7 con = new Constructor7(50.5f);
    }
}

ANS - Pen=50.5
____________________________________________________________________
Que-18)
_________________
What will be the output of the following Java program?

class A2 {
    int i;

    void display() { // this method will hide
        System.out.println(i);
    }
}

class B2 extends A2 {
    int j;

    void display() { // Method Hiding
        System.out.println(j);
    }
}

public class inheritance_demo {
    public static void main(String args[]) {
        B2 obj = new B2();
        obj.i = 1;
        obj.j = 2;
        obj.display();
    }
}

ANS - 2 
_________________________________________________________________
Que-19)
______________
public class Main232 {

  String languages;

  // constructor accepting single value
  Main(String lang) {
    languages = lang;
    System.out.println(languages + " Programming Language");
  }

  public static void main(String[] args) {

    // call constructor by passing a single value
    Main obj1 = new Main("Java");
    Main obj2 = new Main("Python");
    Main obj3 = new Main("C");
  }
}

ANS -
Java Programming Language
Python Programming Language
C Programming Language

________________________________________________________________
Que-20)
_____________
public class Main333 {

  String language;

  Main() {
    this.language = "Java";
  }

  Main(String language) {
    this.language = language;
  }

  public void getName() {
    System.out.println("Programming Langauage: " + this.language);
  }

  public static void main(String[] args) {

    Main obj1 = new Main();

    Main obj2 = new Main("Python");

    obj1.getName();
    obj2.getName();
  }
} 

ANS -
Programming Langauage: Java
Programming Langauage: Python