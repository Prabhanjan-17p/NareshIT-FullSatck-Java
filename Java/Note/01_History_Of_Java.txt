10-01-2025
-----------
History of Java :
-----------------
Initial Name of Java	: OAK, 1991 (Tree Name)
	Developed By	: James Gosling and his friends
	Released Date	: 23rd January 1996 [JDK 1.0]
	Project Name	: Green Project
		Java	: Island, Indonesia
	Official Symbol : Coffee CUP	
----------------------------------------------------------------
What is a function?
-------------------
A function is a self defined block which is used for calculation, printing the result or to perform some specific 
operation.

A function can be divided into two types :

1) Predefined OR Built-in function
2) Userdefined OR Custom function

Predefined function :
---------------------
If a function is defined by language creater itself then it is called predefined function.

Example : printf(); , scanf(); [From C language]

Userdefined function :
----------------------
If a function is defined by user for own requirement and specification then it is called User-defined function.

Example :  void add(int x, int y){}

Advantages of Function :
------------------------
1) Modularity :
------------
Dividing the bigger task into number of smaller tasks where each sub task will perform indepenedent task.

2) Easy understanding :
---------------------
Once the complex task is divided into number of modules then it is very easy to understand the entire module.

3) Reusability :
--------------
Based on our requirement we can reuse a particular module 'n'
number of times.

Note :In java we will always reuse our java classes.

4) Easy debugging :
-------------------
Each sub task is isolated (different) from another sub task so we can easily find the errors.

Why we pass argument/parameter to the function :
------------------------------------------------
We pass parameter to a function for getting more information regarding that function. If we don't pass parameter then it may represent partial information.

Example :

public void deposit(double amount)
{

}

public void doSum(int x, int y, int z)
{
}

public void sleep(int hours)
{
}
---------------------------------------------------------------
Why functions are called Method in java ?
-----------------------------------------
In some languages, we have a support to write a function inside a class as well as outside of the class.

If we write a function inside a class then it is called Method.

In java language, We can't write a function outside of the class, It must be inside the class only that is the reason functions are Method in java.[10-JAN-25]
===============================================================
20-01-2025
----------
**What is platform independency in java ?
-----------------------------------------
C and C++ programs are platform dependent programs that means the .exe file created on one machine will not be executed on the another machine if the system configuration is different.

That is the reason C and C++ programs are not suitable for website development.

The role of java compiler :
---------------------------
1) Syntax verification.
2) Verify the compatibility issues (L.H.S = R.H.S)
3) Will Convert Source code into byte code.


Java is a platform independent language. Whenever we write a java program, the extension of java program must be .java. 

Now this .java file we submit to java compiler (javac) for compilation process. After successful compilation the compiler will generate a very special byte code file i.e .class file (also known as bytecode). Now this .class file we submit to JVM for execution purpose.

The role of JVM is to load and execute the .class file. Here JVM plays a major role because It converts the .class file into appropriate machine code instruction (Operating System format) so java becomes platform independent language and it is highly suitable for website development.[20-JAN-25]

Note :- We have different JVM for different Operating System that means JVM is platform dependent technology where as Java is platform Independent technology.

JVM internally contains an interpreter so it executes the code line by line. It is written in 'C'langugae hance platform dependent.

Note : All the browsers internally contain JVM are known as
       JEB (Java Enabled Browsers) browser.

--------------------------------------------------------------
21-01-2025
-----------
What is the difference between bit code and byte code

bit code which is generated by C and C++ languages are directly understood by Opearting system, on the other hand the byte code which is generated by Java lanaguage is understood by JVM (but not understood by Operating system directly)
---------------------------------------------------------------
What is the difference between JDK, JRE, JVM and JIT compiler ?
---------------------------------------------------------------
JDK : [Diagram 21-JAN-25]
-----
It stands for Java Development kit. Internally It contains JRE and JVM. It is a developer version that means by using JDK we can develop and execute our java program.
In order to develop and execute the java program, It provides so many JDK tools which are as follows :

a) javac    : Java compiler, responsible for compile our java program.
b) java     : Java launcher, responsible for executing the java program.
c) jdb      : java debugger, Used to debug the code internally
d) javadoc  : Java documentation, Used to generate documentation
e) javap    : Java profiler, Used to get the details of .class file
f) jconsole : Java Console, used to display the output in the console.

Note : If we want to verify the version of java which is installed in my system then we can use the following command :

java -version

JRE :
-----
JRE stands for Java Runtime Environment.Internally it contains JVM + class libraries. It is a client version that means by using JRE we can execute (we can't develop) our java program.

This JRE folder is not available from java 11V so, from java 11V we can directly execute our java program by using the following command(No need to compile)

java FileName.java [We can execute Directly]
-------------------------------------------------------------------
JVM :
-----
It stands for Java Virtual Machine. The main purpose of JVM to load and execute the .class file. JVM plays a major role because It converts the .class file into appropriate machine code instruction (byte code to bit code). JVM is also responsible to load the .class file, Verify .class file, execute the code line by line by using Interpreter.
--------------------------------------------------------------------
JDK - 
==========
	- To developed and run the java application the required environment is JDK.
	- It is used in developer side part.
JRE -
==========
	- Only run or Just to run the java application the required environment is JRE.
	- It is used in Client Side part.
JVM -	
==========
	- JVM is an interpreter which is responsible to run code line by line.

NOTE -  JDK = JRE + Development Tools 
	    JRE = JVM + Library class
--------------------------------------------------------------------
What is the difference between Compiler and Interpreter ?
----------------------------------------------------------
Diagram [21-JAN]

What is JIT Compiler :
-----------------------
As we know, Our interpreter is slow in nature so to boost up the java execution, we have JIT (Just In time) compiler support.

It holds the repeated code instruction and native code instruction, It will directly provide these two instrution at time  of line by line execution so our interpreter executes the code in more efficient way hance the overall execution becomes very fast.
------------------------------------------------------------------
22-01-2025
----------
How many data types in java ?
------------------------------
Paint Diagram [22-JAN-25]

What is the difference between statically typed and dynamically typed language ?
--------------------------------------------------------------
statically typed language :
----------------------------
The languages where data type is compulsory before initialization of a variable are called Statically typed language.
In these languages, once we define the type of the variable then it will hold same kind of value till the end of the program.

Example of statically typed languages :
C,C++, JSE, C# and so on

Dynamically typed language :
----------------------------
The languages where Data type is not compulsory, It is optional to initialize the variable are called Dynamically Typed Language.

In these languages we can provide all different kinds of values to the variable during the execution of the program.

Example of dynamically typed languages :
Visual Basic, Javascript, Python and so on
------------------------------------------------------------------
Flavors of Java :
-----------------
In java, We have total 4 flavors :

1) JSE (Java Standard Edition) [Stand-alone Application]

2) JEE (Java Enterprise Edition) [Websites OR web application]

3) JME (Java Micro Edition) [Mobile Apps OR Android Appln]

4) JavaFX (It is used to Develop GUI Application) [outdated]

-----------------------------------------------------------------
What is a comment in java ?
----------------------------
Comments are used to enhance the readability of the code. It is ignored by the Compiler.

In java, We have 3 types of comments 

1) Single line Comment
   //

2) Multiline Commment
   /*
   
   
   */
   
3) Documentation comment 
   /**
   Name of the Project : Online Shopping
     Number of Modules : 70 Modules
          Project Date : 12th March 2024
     Last Modification : 9th Oct 2024
                Author : James Goling and his friends
   */
----------------------------------------------------------------

WAP in java to display welcome message :
-----------------------------------------
public class Welcome
{
	public static void main(String[] args) 
	{
	   System.out.println("Welcome to java Language ");		
	}
	
}


Description of main() method :
-------------------------------
public :
--------
It is an access modifier in java which defines the accessibility level of main method. Our main method must be declared as public otherwise JVM can't access our main  method so the execution of the program will not be started.

If we don't declare our main method with public access modifier then code will compile but it will not be executed by JVM.
-----------------------------------------------------------------
23-01-2025
-----------
static :
-------
As of now, We have only two types of methods in java.

  1) static method (Object is not required)
  2) non static method (Object is required)

If we declare any method with static keyword then it is called static method. In order to call static method, Object is not required. We can call the static method by using the following two approaches :

Case 1 :
---------
If a static method is declared in the same class where main method is available then we can directly call the static method with the help of method name as shown in the program.

public class StaticMethodDemo1 
{
	public static void main(String[] args) 
	{		
		System.out.println("Hello Batch 42 and 43!");
		m1();
	}
	
	public static void m1() //static Method
	{
		System.out.println("M1 static Method");
	}
}

Case 2 :
--------
If a static method is declared in another class (not in the class where main method is available) then to call the static method 
class name is required that means we can't call the static method directly as shown in the program below :

class Hello
{
	public static void greet()
	{
		System.out.println("Hello Everyone!!!");
	}
}

public class StaticMethodDemo2 
{
	public static void main(String[] args) 
	{
		Hello.greet();
		System.out.println("Hello Batch 42 and 43!!!!");
	}
}


Our main method must be declared as static so, JVM will call the main method with the help of class name because main is a static method.

If we don't declare our main method as static then code will compile but it will not be executed by JVM.
-----------------------------------------------------------------
void :
------
It is a keyword in java. We should write void before the name of the method so that particular method will not return any kind of value.

If we put the return type of the method as void then there is no communication between one module to another module.[It is one way communication]

If we don't write void or any other kind of return type before the main method then code WILL NOT compile because java compiler has provided syntax rule that every method must contain return type.

Note : If main method is not declared with void then program will NOT BE executed.

Note : Without return type we can't define a method in java [Syntax Rule]

-----------------------------------------------------------------
main() method :
---------------
It is a user-defined method because a user is responsible to define some logic inside the main method.

main() method is very important method because every program execution will start from main() method only, as well as the execution of the program ends with main() method only.
-----------------------------------------------------------------
Q) Can we write multiple method with same name ?
------------------------------------------------
Yes, We can write multiple methods with same name but parameter must be different otherwise code will not compile.

Note :- We can also write multiple main methods with different parameter but JVM will always execute the main method which takes String [] args (String array) as a parameter as shown in the program below.

public class Welcome 
{
	public static void main(String[] args) 
	{		
		System.out.println("Welcome to java Language ");	
		main("NIT");
	}
	
	public static void main(String args) 
	{		
		System.out.println(args);	
	}
	
}
------------------------------------------------------------------
String [] args :    
----------------
String is a predefined class in java available in java.lang package (just like header file) and args is an array variable of type String so, it can hold multiple values.

IQ :
----
Why the main method of java accepts String array as a parameter ?

String is a collection of alpha-numeric character so it can accept all different kind of values. 

Java software people has provided String array as a parameter so it can ACCEPT MULTIPLE  VALUES OF DIFFERENT TYPE, that means providing more wider scope to accept hetrogeneous types of values.
-----------------------------------------------------------------
24-01-2025
----------
System.out.println() :
----------------------
It is an output statement in java, By using this statement we can print different types of values on the console. 

In this statement System is a predefined class available in java.lang pacakage, out is a reference variable of type PrintStream class available in java.io package and println() is 
a predefined method available in PrintStream class.

Note :Actually It is HAS-A relation concept, System class has 
PrintStream class as shown below.

public class System
{
   PrintStream out = null;  //HAS-A Relation
}
----------------------------------------------------------------
//WAP to add two numbers by using Variable :
public class  Addition
{
	public static void main(String[] args) 
	{
		int x = 100;
		int y = 200;
		int z = 300;
		System.out.println(z);
	}
}

Note : Here we are not getting user-friendly message, we are getting the output only as 300.
-----------------------------------------------------------------
How to provide user-friendly message to the end user ?
-------------------------------------------------------
If we want to user-friendly message through console then we can use '+' operator.

Behavior of '+' Operator :
--------------------------
1 + 1 = 2 [Here '+' operator behaves as an Arithmetic Operator]

"1" + 1 = 11 [Here '+' operator behaves as String concatenation operator]
	      
2 + "22" = 222 [Here '+' operator behaves as String concatenation operator]	      
--------------------------------------------------------------   
//Provide user-friendly message :	      
public class Sum 
{
	public static void main(String[] args) 
	{
		int a = 12;
		int b = 24;
		int c = a + b;
		System.out.println("Sum is :"+c); 
	}
}
-----------------------------------------------------------------
System.out.printf();
--------------------
public class Sum 
{
	public static void main(String[] args) 
	{
		int a = 12;
		int b = 24;
		int c = a + b;
		System.out.printf("Sum is :%d\n",c);
		
	}
}
==================================================================
//WAP in java to add two numbers without using 3rd Variable :

public class AdditionWithout3rdVariable 
{
	public static void main(String[] args) 
	{
		int x = 100;
		int y = 200;		
		System.out.println("Sum is :"+x+y); //Sum is 100200
		System.out.println(+x+y); //300
		System.out.println(""+x+y); //100200
		System.out.println("Sum is :"+(x+y)); //Sum is 300
	}
}
------------------------------------------------------------------
IQ :
-----
//Interview Question
class IQ 
{
	public static void main(String[] args) 
	{
		String str = 90 + 90 + "Ravi" + 80 + 80; //180Ravi8080
		System.out.println(str);
	}                            
	                            
} 
------------------------------------------------------------------
Command Line Argument :
------------------------
If we pass any argument to the main method then it is called Command Line Argument.

By using command line argument, We can pass some value at runtime.

The advantage of command line argument is, Single time compilation and number of times execution.
-----------------------------------------------------------------
public class Command 
{
	public static void main(String[] args) 
	{
		System.out.println(args[0]);
	}
}


javac Command.java
java Command Scott Smith Martin 

Output : It will print Scott.
-----------------------------------------------------------------
public class CommandArgument 
{
	public static void main(String x[]) 
	{
		System.out.println(x[1]);
	}
}

javac CommandArgument.java

java CommandArgument 12 89 90
Output is : 89

java CommandArgument 12.90  78.56  45.44
Output is : 78.56

java CommandArgument true false
Output is : false

java CommandArgument A B
Output is : B

Note : Index of the array variable will change using space.
-----------------------------------------------------------------
//Program to print Full name of the user 
public class FullNameUsingCommand 
{
	public static void main(String[] name) 
	{
		System.out.println(name[0]);
	}
}

javac FullNameUsingCommand.java
java FullNameUsingCommand "Virat Kohli"
Output : Virat Kohli
-------------------------------------------------------------------
25-01-2025
-----------
public class Command 
{
	public static void main(String[] x) 
	{
		System.out.println(x[0]);
	}
}

javac Command.java
java Command 

Here we are not passing any value and try to print the value of 
0th index so, It will generate java.lang.ArrayIndexOutOfBoundsException
-------------------------------------------------------------------
How to find out the length of an array :
-----------------------------------------
Array is an object in java, array has provided a predefined property or variable called length through which we can find out the length of the array as shown below.

//How to find the length of the array
public class ArrayLength 
{
	public static void main(String[] args) 
	{
		int []arr = {10, 20, 30, 40, 50, 60};
		System.out.println("The length of the array is :"+arr.length); //6
				
	}
}
--------------------------------------------------------------------
//How to print the length of the array by using command line argument 

public class CommandLength 
{
	public static void main(String[] args) 
	{
		System.out.println("Length is :"+args.length);
	}
}

javac CommandLength.java

java  CommandLength 
Length is : 0

java  CommandLength 12
Length is : 1

java  CommandLength Scott Smith
Length is : 2

java  CommandLength Scott Smith 90.67
Length is : 3
---------------------------------------------------------------------
WAP to add two numbers by using Command Line Argument :
-------------------------------------------------------
public class CommandAdd 
{
	public static void main(String[] args) 
	{
		System.out.println(args[0] + args[1]);
	}
}

javac CommandAdd.java
java CommandAdd 100  200
Output is : 100200

Note : In the above program '+' operator works as a String Concatenation operator so, result is appended.
--------------------------------------------------------------------
How to convert a String value into corresponding integer type :
---------------------------------------------------------------
If we want to convert any String value into corresponding int type then Java software people has provided a predefined class called Integer class available in java.lang package. 

This Integer class contains a predefined static method called parseInt(String x) through which we can convert a String value into corresponding int type.

public class Integer
{
  public static int parseInt(String x)
  {
     //convert this String value x into int type of value 
     return int value;
  }
}
--------------------------------------------------------------------
public class CommandAddition 
{
	public static void main(String[] args) 
	{			
		//Convert String into integer type 
		  int p = Integer.parseInt(args[0]);
		  int q = Integer.parseInt(args[1]);
		  
		  System.out.println("Addition is :"+(p+q));
		
	}
}

javac CommandAddition.java
java CommandAddition 100 200
Addition is :300
---------------------------------------------------------------------
//WAP to find out the cube of a number by using Command Line Argument 

public class CommandCube 
{
	public static void main(String[] args) 
	{
	   int num =  Integer.parseInt(args[0]);
	   System.out.println("Cube of "+num+" is :"+(num*num*num));
	}
}
----------------------------------------------------------------------
//WAP which will accept the value from command line argument based on the following criteria : 

1) if the length is 0, It should print "No value is provided" 
2) if the length is 1, It should print the square of the number.
3) if the length is 2, then it should print sum of the number.

public class CommandValues 
{
	public static void main(String[] args) 
	{
		if(args.length == 0)
		{
		   System.out.println("No value is provided");	
		}
		else if(args.length == 1)
		{
			int num = Integer.parseInt(args[0]);
			System.out.println("Square of "+num+" is :"+(num*num));
		}
		else if(args.length == 2)
		{
		    int a = Integer.parseInt(args[0]);
			int b = Integer.parseInt(args[1]);
			System.out.println("Sum of "+a+" and "+b+ " is :"+(a+b));
		}
	}
}
-----------------------------------------------------------------------
How to convert a String into float type :
------------------------------------------
In order to convert String into float type Float.parseFloat(String x)
statement is required as shown below :

public class FloatConversion 
{
	public static void main(String[] args) 
	{
		float f1 =  Float.parseFloat(args[0]);
		System.out.println("Float value is :"+f1);
	}
}

javac FloatConversion.java
java FloatConversion 78

Output is : 78.0
----------------------------------------------------------------------
In the same way to convert a String value into double type we should use Double.parseDouble(String x) statement.
----------------------------------------------------------------
What is Eclipse IDE :
---------------------
Eclipse IDE :
-------------
IDE stands for "Integrated Development Environment". By using eclipse IDE, we can develop, compile and execute our java program in a single window.

The main purpose of Eclipse IDE to reduce the development time, once the development time will be reduced then automatically the cost of the project will be reduced.
----------------------------------------------------------------
27-01-2025
----------
How to create a Project in Eclise IDE :
---------------------------------------
In order to create a project in ECLIPSE IDE we should follow the following steps :

File -> New -> Java Project -> Batch 42_43 -> Next -> Finish.
----------------------------------------------------------------
What is a Package in java :
----------------------------
A package is nothing but folder in windows. It is used to arrange the classes and interfaces into a particular group.

If we arrange our java classes into a particular group by using pacakges (folders) then we will get the following two advantages :

1) Fast searching is possible.
2) Name can be reusable.

Program that describes a package is folder in windows :
--------------------------------------------------------
A package is a keyword in java and it must be the first statement of any java program.

Addition.java
-------------
package arithmetic;

public class Addition 
{
	
}


Note : The above program Addition.java uses package statement 
       so the compilation style would be different :
       
       javac -d . Addition.java [java space -d space dot FileName.java]

       The above command will create a folder called arithmetic and Addition.class file will be placed inside that folder.
       
       So, the final conclusion is : A package is folder in java.
       
-----------------------------------------------------------------
Types of Packages in java :
----------------------------
There are two types of packages in java :

1) Predefined OR Built-in Package
2) Userdefined OR Custom Package

Predefined Packages :
----------------------
The packages which are created by java software people to arrange the java programs are called Predefined Packages.

Example : java.lang, java.util, java.io, java.sql e.t.c

2) Userdefined Packages :
-------------------------
The packages which are created by user for some specific purposes
to arrange the user-defined java programs are called User-defined
packages.

Example : arithmetic, basic, com.ravi.introduction and so on
----------------------------------------------------------------
Steps to execute the command Line Argument Program using Eclipse IDE
-----------------------------------------------------------------
Right click on the program -> Run As -> Run configuration -> Verify your main class name -> select argument tab -> pass the appropriate value -> Run

AreaOfRectangle.java
--------------------
package com.ravi.command_line_argument;

public class AreaOfRectangle 
{
	public static void main(String[] args) 
	{
		double length = Double.parseDouble(args[0]);
		double breadth = Double.parseDouble(args[1]);
		
		double area = length * breadth;
		
		System.out.println("Area of Rectangle is :"+area);	

	}

}

-----------------------------------------------------------------
//WAP to find out the area of Circle by using Command Line Arg :
----------------------------------------------------------------
package com.ravi.command_line_argument;

public class AreaOfCircle 
{
	public static void main(String[] args) 
	{
		 final double PI = 3.14;		 
		 double radius = Double.parseDouble(args[0]);
		 
		 double area = PI * radius * radius;
		 
		 System.out.printf("Area of Circle is : %.2f ",area);
		 
	}

}
-----------------------------------------------------------------
How Integer.parseInt() method works internally :
-------------------------------------------------
package com.ravi.command_line_argument;

class Calculate
{
	public static int getSqureOfNum(int num)
	{
		return num*num;
	}
	
	public static int getCubeOfNum(int num)
	{
		return num*num*num;
	}
	
	public static int doSum(int x, int y)
	{
		return x+y;		
	}
	
}

public class ArithmeticOperation 
{
	public static void main(String[] args) 
	{
		int result = Calculate.getSqureOfNum(9);
		System.out.println("Square is :"+result);
		
		result =   Calculate.getCubeOfNum(3);  
		System.out.println("Cube is :"+result);
		
		result =  Calculate.doSum(12, 12);
		System.out.println("Sum is :"+result);

	}

}

Note : Here Just like Integer class, We have created our own class called Calculate which contains 3 static methods which are 
as follows :

 1) public static int getSqureOfNum(int num)
 2) public static int getCubeOfNum(int num)
 3) public static int doSum(int x, int y)
=================================================================
Naming Convention in java :
----------------------------
